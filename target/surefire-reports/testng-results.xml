<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="5" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-05-31T17:57:43 EDT" name="Surefire suite" finished-at="2022-05-31T17:57:46 EDT" duration-ms="3041">
    <groups>
    </groups>
    <test started-at="2022-05-31T17:57:43 EDT" name="Surefire test" finished-at="2022-05-31T17:57:46 EDT" duration-ms="3041">
      <class name="spotify.PlaylistTests">
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:spotify.PlaylistTests@70e3f36f]" started-at="2022-05-31T17:57:43 EDT" name="beforeMethod" finished-at="2022-05-31T17:57:43 EDT" duration-ms="13" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void spotify.PlaylistTests.ShouldBeAbleToCreatePlaylist()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:spotify.PlaylistTests@70e3f36f]" started-at="2022-05-31T17:57:43 EDT" name="beforeMethod" finished-at="2022-05-31T17:57:43 EDT" duration-ms="13" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void spotify.PlaylistTests.ShouldBeAbleToUpdatePlaylist()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:spotify.PlaylistTests@70e3f36f]" started-at="2022-05-31T17:57:43 EDT" name="beforeMethod" finished-at="2022-05-31T17:57:43 EDT" duration-ms="13" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void spotify.PlaylistTests.ShouldNotBeAbleToCreatePlaylistWithOutName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:spotify.PlaylistTests@70e3f36f]" started-at="2022-05-31T17:57:43 EDT" name="beforeMethod" finished-at="2022-05-31T17:57:43 EDT" duration-ms="13" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void spotify.PlaylistTests.ShouldBeAbleToGetPlayList()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:spotify.PlaylistTests@70e3f36f]" started-at="2022-05-31T17:57:43 EDT" name="beforeMethod" finished-at="2022-05-31T17:57:43 EDT" duration-ms="13" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void spotify.PlaylistTests.ShouldNotBeAbleToCreatePlaylistWithExpiredToken()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ShouldNotBeAbleToCreatePlaylistWithExpiredToken()[pri:0, instance:spotify.PlaylistTests@70e3f36f]" started-at="2022-05-31T17:57:43 EDT" name="ShouldNotBeAbleToCreatePlaylistWithExpiredToken" description="Verify Playlist cannot be created without token" finished-at="2022-05-31T17:57:45 EDT" duration-ms="2259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShouldNotBeAbleToCreatePlaylistWithExpiredToken -->
        <test-method signature="ShouldBeAbleToGetPlayList()[pri:0, instance:spotify.PlaylistTests@70e3f36f]" started-at="2022-05-31T17:57:43 EDT" name="ShouldBeAbleToGetPlayList" description="Verify Playlist can be retrieved" finished-at="2022-05-31T17:57:46 EDT" duration-ms="2887" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShouldBeAbleToGetPlayList -->
        <test-method signature="ShouldBeAbleToCreatePlaylist()[pri:0, instance:spotify.PlaylistTests@70e3f36f]" started-at="2022-05-31T17:57:43 EDT" name="ShouldBeAbleToCreatePlaylist" description="Verify Playlist can be created" finished-at="2022-05-31T17:57:46 EDT" duration-ms="2928" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShouldBeAbleToCreatePlaylist -->
        <test-method signature="ShouldNotBeAbleToCreatePlaylistWithOutName()[pri:0, instance:spotify.PlaylistTests@70e3f36f]" started-at="2022-05-31T17:57:43 EDT" name="ShouldNotBeAbleToCreatePlaylistWithOutName" description="Verify Playlist cannot be created without name" finished-at="2022-05-31T17:57:46 EDT" duration-ms="2819" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShouldNotBeAbleToCreatePlaylistWithOutName -->
        <test-method signature="ShouldBeAbleToUpdatePlaylist()[pri:0, instance:spotify.PlaylistTests@70e3f36f]" started-at="2022-05-31T17:57:43 EDT" name="ShouldBeAbleToUpdatePlaylist" description="Verify Playlist can be updated" finished-at="2022-05-31T17:57:46 EDT" duration-ms="2867" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShouldBeAbleToUpdatePlaylist -->
      </class> <!-- spotify.PlaylistTests -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
